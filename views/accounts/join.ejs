
    
<% include ../header.ejs %>


<div class="row">
    <div class="col-md-4 col-md-offset-4">
        <div class="login-panel panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">회원가입</h3>
            </div>
            <div class="panel-body">
                <form role="form" action="" id="join_form" method="post">
                    <fieldset>
                        <div class="form-group">
                            <input class="form-control" placeholder="학번" name="user_id" type="text" autofocus="" required="">
                        </div>
                        <div class="form-group">
                            <input class="form-control" placeholder="패스워드" name="password" type="password" value="" required="">
                        </div>
                        <div class="form-group">
                            <input class="form-control" placeholder="패스워드 확인" name="password2" type="password" value="" required="">
                        </div>
                        <div class="form-group">
                            <input class="form-control" placeholder="전공" name="major" type="text" value="" required="">
                        </div>
                        <div class="form-group">
                            <input class="form-control" placeholder="블록체인 아이디" id="blockchainid" name="blockchainid" readonly type="text" value="" required="" >
                        </div>
                        <div class="form-group">
                            <input class="form-control" placeholder="블록체인 비밀번호" id="blockchainpwd" name="blockchainpwd" type="password" value="" required="">
                        </div>
                        <div class="form-group">
                            <input class="form-control" id="onlyHangul" placeholder="이름" name="user_name" type="text" autofocus="" required="">
                        </div>
                        <!-- <div class="form-group">
                            <input class="form-control" id="onlyNumber" placeholder="핸드폰 번호" name="user_phone" type="text" value="" required="">
                        </div>
                        <div class="form-group">
                            <select name="user_sex" class="form-control" >
                                <option value="M" selected="selected">M</option> 
                                <option value="F">F</option> 
                            </select>
                        </div> -->
                        <!-- <div class="form-group">
                            <input type="date" name="user_birth" class="form-control">
                        </div>
                        <div class="form-group">
                            <input class="form-control" placeholder="E-Mail" name="user_email" type="email" autofocus="" required="">
                        </div>
                        <div class="form-group">
                            <input class="form-control" placeholder="주소" name="user_addr" type="text" readonly value="" required="">
                        </div>
                        <div class="form-group">
                            <input class="form-control" placeholder="상세주소" name="user_addr2" type="text" value="" required="">
                        </div>
                        <div class="form-group">
                            <input class="form-control" id="onlyNumber" placeholder="우편번호" name="user_post" type="text" value="" required="">
                            <span style="margin-top:10px" class="btn btn-primary" onclick="setDaumPostcode()">우편번호 찾기</span>
                        </div> -->
                        
                        <!-- Change this to a button or input when using this as a form -->
                        <input type="button" class="btn btn-lg btn-success btn-block" onclick="etherjoin()" value="블록체인 계정생성">
                        <input type="submit" class="btn btn-lg btn-success btn-block" value="가입하기">
                    </fieldset>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- iamport daum address api -->
<script src="http://dmaps.daum.net/map_js_init/postcode.v2.js"></script>
<script type="text/javascript">
    
// 연결할 JSON-RPC서버(가상 머신)의 IP 주소 및 포트 번호
// 1.이더리움 접속 코드
// URL 서버 8546
function etherjoin(){
    var blockchainpwd = $("#blockchainpwd").val();
    var $blockchainpwd = $('#join_form input[name=blockchainpwd]');
        if(!$blockchainpwd.val()){
                        alert("블록체인 비밀번호를 입력해주세요.");
                        $blockchainpwd.focus();
                        return true;
        }
    // const urdl = "http://220.76.95.91:8546"; //외부 포트220.76.95.91 내부 192.168.0.159
    const urdl = "http://220.76.95.91:8545"; //외부 포트220.76.95.91 내부 192.168.0.159
    var Web3 = require("web3");
    var web3 = new Web3();  // web3 모듈
    var provider = new web3.providers.HttpProvider(urdl); // 블록체인 노드접속
    web3.setProvider(provider);
    //계정 newaccount 코드
    
    $.ajax({
        url: urdl,
        type: 'post',
        datatype: 'application/json',
        contentType: 'application/json',
        dataType: 'JSON',
        data: JSON.stringify({
            id: 8,
            jsonrpc: '2.0',
            method: "personal_newAccount",
            params: [blockchainpwd]
        }),

        success: function(blockchainid){
            var blockchain_id = JSON.stringify(blockchainid["result"]);
            var blockchain_id2 = blockchain_id.replace(/\"/gi, "");  
            $('#blockchainid').val(blockchain_id2);
        },

        error: function(error) {
            callback(error);
        }
    });


    //ABI
    var masterABI = [{"constant":false,"inputs":[{"name":"_contractFile","type":"string"},{"name":"_contractHash","type":"bytes32"}],"name":"issue","outputs":[],"payable":false,"type":"function","stateMutability":"nonpayable"},{"constant":true,"inputs":[],"name":"getContracts","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"type":"function","stateMutability":"view"},{"constant":true,"inputs":[{"name":"_contractHash","type":"bytes32"}],"name":"getContract","outputs":[{"name":"","type":"address"},{"name":"","type":"string"},{"name":"","type":"bytes32"}],"payable":false,"type":"function","stateMutability":"view"}];
    }
        // JSON 메시지 생성
        function createJSONdata(method, params) {
        var JSONdata = {
            "id":8,
            "jsonrpc" : "2.0",
            "method" : method,
            "params" : params
            };
        return JSONdata;
        }
    // JSON-RPC 실행
    function executeJsonRpc(url_exec, JSONdata, success, error) {
        $.ajax({
            type : 'post',
            url : url_exec,
            data : JSON.stringify(JSONdata),
            contentType : 'application/JSON',
            dataType : 'JSON',
            scriptCharset : 'utf-8',
            success : function(data) {
                success(data);
            },
            error : function(data) {
                error(data);
            }
        });
    }
    // JSON-RPC 실행
    function checkTrResult(hashVal) {
        //var JSONdata = createJSONdata("eth_getTransactionByHash", ["0x9faa7817dd5e926a5fec6adecc3d73d4dc1f3d97d7b8278786aa794646d8c974"]);
        var JSONdata = createJSONdata("eth_getTransactionByHash", [hashVal]);
        executeJsonRpc(url, JSONdata, function success(data) {
            // 로그인 성공
            if (data.error == null) {
                var rst = parseInt(data.result.blockNumber, 16);
                console.log("Result Check success!");
            } else {
                // 로그인 실패
                console.log("Result Check error1111");
            }
            //init();
        }, function error(data) {
            // 로그인 실패ccc
            console.log("Result Check error222");
        });
    }
    // JSON-RPC 실행
    function checkTrResultDisp() {
        //var JSONdata = createJSONdata("eth_getTransactionByHash", ["0x9faa7817dd5e926a5fec6adecc3d73d4dc1f3d97d7b8278786aa794646d8c974"]);
        var JSONdata = createJSONdata("eth_getTransactionByHash", [document.getElementById("trHash").value]);
        executeJsonRpc(url, JSONdata, function success(data) {
            //alert(data.error);
            // 로그인 성공
            if (data.error == null) {
                //alert(data);
                //alert(data.result.blockNumber);
                var rst = parseInt(data.result.blockNumber, 16);
                //alert(rst);
                ///return rst;
                console.log("Result Check success!");
            } else {
                // 로그인 실패
                console.log("Result Check error1111");
            }
            //init();
        }, function error(data) {
            // 로그인 실패ccc
            console.log("Result Check error222");
        });
    }
</script>

<script type="text/javascript">
(function(){
    $(document).ready(function() {
            $('#join_form').submit(function(){
                var $useridInput = $('#join_form input[name=user_id]');
                var $passwordInput = $('#join_form input[name=password]');
                var $passwordInput2 = $('#join_form input[name=password2]');
                var $major = $('#join_form input[name=major]');
                var $blockchainid = $('#join_form input[name=blockchainid]');
                var $blockchainpwd = $('#join_form input[name=blockchainpwd]');
                var $user_name = $('#join_form input[name=user_name]');
                // var $user_phone = $('#join_form input[name=user_phone]');
                // var $user_sex = $('#join_form input[name=user_sex]');
                // var $user_birth = $('#join_form input[name=user_birth]');
                // var $user_email = $('#join_form input[name=user_email]');
                // var $user_addr = $('#join_form input[name=user_addr]');
                // var $user_addr2 = $('#join_form input[name=user_addr2]');
                // var $user_post = $('#join_form input[name=user_post]');
                if(!$useridInput.val()){
                    alert("아이디를 입력해주세요.");
                    $useridInput.focus();
                    return false;
                }
                if(!$passwordInput.val()){
                    alert("확인 패스워드를 입력해주세요.");
                    $passwordInput2.focus();
                    return false;
                }
                if(!$passwordInput2.val()){
                    alert("확인 패스워드를 입력해주세요.");
                    $passwordInput2.focus();
                    return false;
                }
                if(!$major.val()){
                    alert("전공을 입력해주세요.");
                    $major.focus();
                    return false;
                }
                if($passwordInput.val() !== $passwordInput2.val()){
                    alert("패스워드와 확인용패스워드를 똑같이 입력해주세요.");
                    return false;
                }
                if(!$blockchainid.val()){
                    alert("블록체인계정 생성을 먼저해주세요.");
                    $blockchainid.focus();
                    return false;
                }
                if(!$blockchainpwd.val()){
                    alert("블록체인 비밀번호를 입력해주세요.");
                    $blockchainpwd.focus();
                    return false;
                }
                // if(!$user_name.val()){
                //     alert("이름을 입력해주세요.");
                //     $$user_name.focus();
                //     return false;
                // }
                // if(!$user_phone.val()){
                //     alert("연락처를 입력해주세요.");
                //     $$user_phone.focus();
                //     return false;
                // }
                // // if(!$user_sex.val()){
                // //     alert("성별을 선택해주세요.");
                // //     $user_sex.focus();
                // //     return false;
                // // }
                // if(!$user_birth.val()){
                //     alert("생일을 입력해주세요.");
                //     $user_birth.focus();
                //     return false;
                // }
                // if(!$user_email.val()){
                //     alert("이메일을 입력해주세요.");
                //     $user_email.focus();
                //     return false;
                // }
                // if(!$user_addr.val()){
                //     alert("주소를 입력해주세요.");
                //     $user_addr.focus();
                //     return false;
                // }
                // if(!$user_addr2.val()){
                //     alert("상세주소를 입력해주세요.");
                //     $user_addr2.focus();
                //     return false;
                // }
                // if(!$user_post.val()){
                //     alert("우편번호를 입력해주세요.");
                //     $user_post.focus();
                //     return false;
                // }
                return true;
            });
        });
    })();
</script>
<script type="text/javascript">
// Daum Address API Function
    function setDaumPostcode() {
        new daum.Postcode({
            
            oncomplete: function(data) {
                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.
                // 각 주소의 노출 규칙에 따라 주소를 조합한다.
                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                var fullAddr = ''; // 최종 주소 변수
                var extraAddr = ''; // 조합형 주소 변수
                // 사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                    fullAddr = data.roadAddress;
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                    fullAddr = data.jibunAddress;
                }
                // 사용자가 선택한 주소가 도로명 타입일때 조합한다.
                if(data.userSelectedType === 'R'){
                    //법정동명이 있을 경우 추가한다.
                    if(data.bname !== ''){
                        extraAddr += data.bname;
                    }
                    // 건물명이 있을 경우 추가한다.
                    if(data.buildingName !== ''){
                        extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                    }
                    // 조합형주소의 유무에 따라 양쪽에 괄호를 추가하여 최종 주소를 만든다.
                    fullAddr += (extraAddr !== '' ? ' ('+ extraAddr +')' : '');
                }
                // 우편번호와 주소 정보를 해당 필드에 넣는다.
                $('input[name=user_post]').val(data.zonecode);
                $('input[name=user_addr]').val(fullAddr);
                
                // 커서를 상세주소 필드로 이동한다.
                $('input[name=user_addr2]').focus();
            }
        }).open();
    }
</script>

<% include ../footer.ejs %>
